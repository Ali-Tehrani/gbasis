name: pytest

on:
  push:
    branches:
     - main
    tags-ignore:
      - '**'
  pull_request:

jobs:
  pytest:
    name: "Python ${{ matrix.py }} on OS ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    env:
      COVERAGE_SINGLE: 80
      COVERAGE_TOTAL: 90

    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        py: ["3.7", "3.9", "3.10", "3.11"]

    steps:
      - uses: "actions/checkout@v3"
        
      - name: Setup python for test ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}

      - name: Install dependencies for testing
        run: |
          pip install --upgrade pip
          pip install pytest pytest-md pytest-emoji pytest-cov

      - name: Install development version
        run: |
          # Need editable mode in order to include the test files
          pip install -e .

      - name: pytester-cov
        id: pytester-cov
        uses: programmingwithalex/pytester-cov@main
        with:
          pytest-root-dir: './gbasis/'
          pytest-tests-dir: "./tests/"
          cov-threshold-single: ${{ env.COVERAGE_SINGLE }}
          cov-threshold-total: ${{ env.COVERAGE_TOTAL }}

      - name: Coverage single fail - exit
        if: ${{ steps.pytester-cov.outputs.cov-threshold-single-fail == 'true' }}
        run: |
          echo "cov single fail ${{ steps.pytester-cov.outputs.cov-threshold-single-fail }}"
          exit 1

      - name: Coverage total fail - exit
        if: ${{ steps.pytester-cov.outputs.cov-threshold-total-fail == 'true' }}
        run: |
          echo "cov single fail ${{ steps.pytester-cov.outputs.cov-threshold-total-fail }}"
          exit 1
